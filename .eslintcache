[{"/Users/s91972/NAT/nodejs/line-notification/app.js":"1","/Users/s91972/NAT/nodejs/line-notification/controllers/line.js":"2","/Users/s91972/NAT/nodejs/line-notification/controllers/routes.js":"3","/Users/s91972/NAT/nodejs/line-notification/helpers/logger.js":"4","/Users/s91972/NAT/nodejs/line-notification/service/lineService.js":"5"},{"size":731,"mtime":1598163431929,"results":"6","hashOfConfig":"7"},{"size":588,"mtime":1598166421147,"results":"8","hashOfConfig":"7"},{"size":181,"mtime":1598163456726,"results":"9","hashOfConfig":"7"},{"size":2072,"mtime":1598163466024,"results":"10","hashOfConfig":"7"},{"size":960,"mtime":1599146921363,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"y28jb9",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/s91972/NAT/nodejs/line-notification/app.js",["25"],"const restify = require('restify'),\n  Logger = require('./helpers/logger'),\n  server = restify.createServer();\n\nserver.use(restify.plugins.acceptParser(server.acceptable));\nserver.use(restify.plugins.fullResponse());\nserver.use(restify.plugins.dateParser());\nserver.use(restify.plugins.queryParser());\nserver.use(restify.plugins.bodyParser());\nserver.use(restify.plugins.requestLogger());\n\nserver.listen(process.env.PORT, function (err) {\n  var host = server.address().address == '::' ? 'localhost' : server.address().address;\n  err ? console.log('Restify-API app error:' + err) : console.log('Restify-API app is running @ ' + host + ':' + process.env.PORT);\n});\n\nrequire('./controllers/routes')(server);\n\nmodule.exports = server;\n","/Users/s91972/NAT/nodejs/line-notification/controllers/line.js",["26","27"],"const Logger = require('../helpers/logger'),\n  lineService = require('../service/lineService');\n\nmodule.exports = (server) => {\n  //Find all user data\n  server.get('/notify', async (req, res, next) => {\n    console.log('Line Notify');\n    try {\n      let notify = await lineService\n        .POST()\n        .then((notify) => {\n          console.log('nppfity ', notify);\n          return notify;\n        })\n        .catch((err) => {\n          return err;\n        });\n\n      res.send(notify);\n    } catch (err) {\n      console.log('err ', err);\n      res.send('ERROR ', err);\n    }\n  });\n};\n","/Users/s91972/NAT/nodejs/line-notification/controllers/routes.js",[],"/Users/s91972/NAT/nodejs/line-notification/helpers/logger.js",["28","29","30"],"/**\n * Create a log file and format for the REST API called.It contains debug, success, error message with datetime \n *  1- UTC Date and Time\n    2- Type of the log (eg: Info, Debug, Error)\n    3- The file the log belongs to\n    4- The event that occurred\n    5- Additional data of an event\n    6. Log data (data used to distinguish or group events that occurred for a particular request)\n */\nconst { format, transports } = require('winston'),\n  winston = require('winston'),\n  pjson = require('../package.json'),\n  dateFormat = () => {\n    return new Date(Date.now()).toLocaleString();\n  };\n\nclass LoggerService {\n  constructor(route) {\n    this.logData = null;\n    this.route = route;\n    const logger = winston.createLogger({\n      transports: [\n        // new winston.transports.Console(),\n        new winston.transports.File({\n          filename: `./logs/${route}.log`,\n          prettyPrint: true,\n          json: true,\n        }),\n      ],\n      format: winston.format.combine(\n        winston.format.printf((info) => {\n          let message = `${dateFormat()} | ${info.level.toUpperCase().normalize()} | [ ${route}.log ] | ${info.message} | `;\n          message = this.logData ? message + `requestData:${JSON.stringify(this.logData)} ` : message;\n          return message;\n        })\n      ),\n    });\n    this.logger = logger;\n  }\n\n  setLogData(log_data) {\n    this.logData = log_data;\n  }\n  async info(message) {\n    this.logger.log('info', message);\n  }\n\n  // eslint-disable-next-line no-dupe-class-members\n  async info(message, obj) {\n    this.logger.log('info', message, {\n      obj,\n    });\n  }\n\n  async debug(message) {\n    this.logger.log('debug', message);\n  }\n\n  // eslint-disable-next-line no-dupe-class-members\n  async debug(message, obj) {\n    this.logger.log('debug', message, {\n      obj,\n    });\n  }\n\n  async error(message) {\n    this.logger.log('error', message);\n  }\n\n  // eslint-disable-next-line no-dupe-class-members\n  async error(message, obj) {\n    this.logger.log('error', message, {\n      obj,\n    });\n  }\n}\nmodule.exports = LoggerService;\n","/Users/s91972/NAT/nodejs/line-notification/service/lineService.js",[],{"ruleId":"31","severity":1,"message":"32","line":2,"column":3,"nodeType":"33","messageId":"34","endLine":2,"endColumn":9},{"ruleId":"31","severity":1,"message":"32","line":1,"column":7,"nodeType":"33","messageId":"34","endLine":1,"endColumn":13},{"ruleId":"31","severity":1,"message":"35","line":6,"column":42,"nodeType":"33","messageId":"34","endLine":6,"endColumn":46},{"ruleId":"31","severity":1,"message":"36","line":10,"column":9,"nodeType":"33","messageId":"34","endLine":10,"endColumn":15},{"ruleId":"31","severity":1,"message":"37","line":10,"column":17,"nodeType":"33","messageId":"34","endLine":10,"endColumn":27},{"ruleId":"31","severity":1,"message":"38","line":12,"column":3,"nodeType":"33","messageId":"34","endLine":12,"endColumn":8},"no-unused-vars","'Logger' is assigned a value but never used.","Identifier","unusedVar","'next' is defined but never used.","'format' is assigned a value but never used.","'transports' is assigned a value but never used.","'pjson' is assigned a value but never used."]